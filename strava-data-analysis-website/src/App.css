:root {
  --accent-col: 255, 90, 0;
  --accent-col-rgb: rgb(255, 90, 0);
  --shadow-col: #00000099;
  --bord-col: light-dark(#ccc, #666);

  /* for communication with JSX */
  --bkg-col-light: white;
  --bkg-col-dark: #1f1f1f;

  --bkg-col: light-dark(var(--bkg-col-light), var(--bkg-col-dark));
  --secondary-txt-col: light-dark(#666, #999);

  accent-color: var(--accent-col-rgb);
  color-scheme: light dark;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 16px;
}

body,
html,
#root,
.App {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  height: 100%;
}

body {
  background-color: var(--bkg-col);
}

.App {
  display: grid;
  grid-template-rows: 1fr auto;
}

.App h2 {
  font-size: 2rem;
  text-align: center;
}

.App h3 {
  font-size: 1.5rem;
}

.App :is(p, li, span) {
  font-size: 1.1rem;
}

.App :is(h2, h3, p, li) {
  line-height: 1.75rem;
}

/* --- Banner ----------------------------------- */

@property --x {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --y {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --stop {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --angle {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

.App .banner {
  --fade-h: 100px;
  background:
    radial-gradient(circle at var(--x) var(--y),
      rgba(var(--accent-col), 0.33),
      transparent var(--stop)),
    conic-gradient(from var(--angle) at 150% 150%,
      rgba(var(--accent-col), 0.33),
      transparent,
      rgba(var(--accent-col), 0.33));
  background-color: var(--bkg-col);
  /* background-color: #ff5a00; */
  height: calc(100svh + var(--fade-h));
  animation: spin ease-in-out infinite 10s alternate;
  mask-image: linear-gradient(black calc(100% - var(--fade-h)), transparent);
}

@keyframes spin {
  from {
    --angle: 180deg
  }

  to {
    --angle: 360deg;
  }
}

.App .banner .container {
  position: relative;
  display: grid;
  gap: 32px;
  align-content: center;
  height: 100svh;
}

.App .banner .container * {
  margin: 0;
  text-align: center;
}

.App .banner .title {
  font-size: 4rem;
}

.App .banner .subtitle {
  font-weight: lighter;
  font-size: 2rem;
}

.App {
  & .banner {
    & .repo {
      width: fit-content;
      margin: 0 auto;
      text-decoration: none;
      color: light-dark(black, white);
      padding: 0px 1rem;
      line-height: 3em;
      height: 3em;
      font-size: 1em;
      border-radius: 1.5em;
      display: flex;
      align-items: center;
      gap: 8px;
      -webkit-tap-highlight-color: transparent;
      background-color: light-dark(rgba(var(--accent-col), 0.25), rgb(255 255 255 / 0.1));
      --hov-act-col: light-dark(rgba(var(--accent-col), 0.5), rgb(255 255 255 / 0.2));

      @media (hover: hover) and (pointer: fine) {
        & {
          transition: background-color 200ms linear;
        }

        &:hover {
          background-color: var(--hov-act-col);
        }
      }

      @media (pointer: coarse) {
        &:active {
          background-color: var(--hov-act-col);
        }
      }

      & .icon {
        width: 25px;
        height: 25px;
        filter: brightness(0) invert(1);

        @media (prefers-color-scheme: light) {
          & {
            filter: brightness(0) invert(0);
          }
        }
      }
    }
  }
}

.App .banner .scroll-hint {
  font-size: 1rem;
  position: absolute;
  bottom: 32px;
  width: 100%;
  display: grid;
  gap: 4px;
  justify-content: center;
  justify-items: center;
}

.App .banner .scroll-hint .down-arrow {
  width: 15px;
  height: 15px;
  animation: bob 1s infinite alternate linear;
}

@keyframes bob {
  from {
    transform: translateY(0px);
  }

  to {
    transform: translateY(10px);
  }
}

@media(prefers-color-scheme: light) {
  .App .banner .scroll-hint img {
    filter: brightness(0);
  }
}

/* ---------------------------------------------- */

.App main,
.App section {
  margin: 0 auto;
  max-width: 750px;
  width: calc(100% - 32px);
}

.App main .container {
  /* --n-cols: 3;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)) */
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
}

/* main > * {
  margin-bottom: 12px;
} */

footer {
  margin-top: 32px;
  background-color: light-dark(whitesmoke, #2f2f2f);
  padding: 16px 0;

  & .inner-container {
    margin: 0 auto;
    width: calc(100% - 32px);
    text-align: center;
    color: var(--secondary-txt-col);
  }

  & a {
    color: inherit;
  }

  & .contacts-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 32px;

    & a:has(.icon) {
      -webkit-tap-highlight-color: transparent;
    }

    & .icon {
      --hov-act-filter: brightness(0) invert(1) brightness(0.8);
      width: 30px;
      height: 30px;
      filter: brightness(0) invert(1) brightness(0.6);

      @media(prefers-color-scheme: light) {
        & {
          --hov-act-filter: brightness(0) invert(1) brightness(0.2);
          filter: brightness(0) invert(1) brightness(0.4);
        }
      }

      @media(hover: hover) and (pointer: fine) {
        & {
          transition: filter 200ms linear;
        }

        &:hover {
          filter: var(--hov-act-filter);
        }
      }

      @media(pointer: coarse) {
        &:active {
          filter: var(--hov-act-filter)
        }
      }
    }
  }
}